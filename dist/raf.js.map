{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///raf.js","webpack:///webpack/bootstrap 1195a08f9126fc04428b","webpack:///./src/index.js","webpack:///./src/lib/nativeaf.js","webpack:///./src/lib/now.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","AnimationFrame","options","frameRate","useNative","DEFAULT_FRAMERATE","frameLength","_isCustomFrameRate","_lastTickTime","_tickCount","_currentKeymaps","keymapsSize","_delaying","boundDelayCallback","delayCallback","bind","time","delay","lastTickTime","doCallback","nativeRAF","requestTimeout","self","setTimeout","currentKeymaps","timeFromStart","item","nowFromStart","cancelled","callback","nativeAF","raf","nativeCAF","caf","prototype","requestAnimationFrame","TypeError","cancelAnimationFrame","win","vendor","i","vendors","length","window","dateNow","Date","now","getTime","performance","start"],"mappings":"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","file":"raf.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"raf\"] = factory();\n\telse\n\t\troot[\"raf\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"raf\"] = factory();\n\telse\n\t\troot[\"raf\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// TODO:\n\t// error handle\n\t'use strict';\n\t\n\t// 如果用户不使用false, useNative根据支不支持raf情况自动判断\n\tvar nativeAF = __webpack_require__(1);\n\tvar nowFromStart = __webpack_require__(2);\n\tvar nativeRAF = nativeAF && nativeAF.raf;\n\tvar nativeCAF = nativeAF && nativeAF.caf;\n\t\n\t// 默认帧速率 60fps\n\tAnimationFrame.DEFAULT_FRAMERATE = 60;\n\t\n\t/**\n\t * \n\t * @params {Number || Object}  eg: { frameRate: 30 }\n\t * @constructor\n\t */\n\tfunction AnimationFrame(options) {\n\t  if (!(this instanceof AnimationFrame)) {\n\t    return new AnimationFrame(options);\n\t  }\n\t\n\t  // 用户自定义的帧速率\n\t  if (typeof options == 'number') {\n\t    options = {\n\t      frameRate: options\n\t    };\n\t  }\n\t  options || (options = {});\n\t  options.useNative !== false && (options.useNative = true);\n\t\n\t  this.options = options;\n\t  // 帧速率\n\t  this.frameRate = options.frameRate || AnimationFrame.DEFAULT_FRAMERATE;\n\t\n\t  // 每帧时长\n\t  this.frameLength = 1000 / this.frameRate;\n\t\n\t  this._isCustomFrameRate = this.frameRate !== AnimationFrame.DEFAULT_FRAMERATE;\n\t  \n\t  this._lastTickTime = 0;\n\t  this._tickCount = 0;\n\t  \n\t  this._currentKeymaps = {};\n\t  this.keymapsSize = 0;\n\t  \n\t  this._delaying = false;\n\t  \n\t  this.boundDelayCallback = delayCallback.bind(this);\n\t}\n\t\n\tfunction delayCallback(time) {\n\t  var lastTickTime = this._lastTickTime;\n\t  var delay;\n\t  time = time || 0;\n\t\n\t  // 保证第一次走到这里\n\t  if (lastTickTime === 0) {\n\t    this._lastTickTime = lastTickTime = time;\n\t  }\n\t\n\t  delay = this.frameLength - (time - lastTickTime);\n\t  if (delay <= 0) {\n\t    // should be (time + delay), 但实际上会这个值大\n\t    // 比如10帧，应该是100ms调用，但是可能112ms调用，那么下次delay 88ms就希望调用\n\t    this._lastTickTime = time + delay;\n\t    delay = 0;\n\t  }\n\t  \n\t  if (!this.options.useNative) {\n\t    requestTimeout.call(this, delay);\n\t    return;\n\t  }\n\t\n\t  if (delay === 0) {\n\t    doCallback.call(this);\n\t  } else {\n\t    // if (this.keymapsSize !== 0) {\n\t      nativeRAF(this.boundDelayCallback);\n\t    // }\n\t  }\n\t}\n\t\n\t// use timeout\n\tfunction requestTimeout(delay) {\n\t  var self = this;\n\t  setTimeout(function() {\n\t    doCallback.call(self);\n\t  }, delay);\n\t};\n\t\n\tfunction doCallback() {\n\t  var currentKeymaps;\n\t  var timeFromStart;\n\t  var id;\n\t  var item;\n\t\n\t  this._delaying = false;\n\t  currentKeymaps = this._currentKeymaps;\n\t  this._currentKeymaps = {};\n\t  this.keymapsSize = 0;\n\t  // this._lastTickTime = 0; 注意这里不能重置\n\t\n\t  timeFromStart = nowFromStart();\n\t  for (id in currentKeymaps) {\n\t    item = currentKeymaps[id];\n\t    if (!item.cancelled) {\n\t      item.callback(timeFromStart);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * 请求动画帧\n\t * 所谓自定义帧速率一定要比60小\n\t * 使用递归raf来判断是否到时调用回调,或者一个setTimeout搞定(不支持或不适用native的时候)\n\t *\n\t * @param callback\n\t * @returns {Number} 返回timer id\n\t */\n\tAnimationFrame.prototype.requestAnimationFrame = function(callback) {\n\t  if (!this._isCustomFrameRate) {\n\t    return nativeRAF(callback);\n\t  }\n\t\n\t  if (typeof callback !== 'function') throw new TypeError('arguments should be a callback function');\n\t\n\t  var self = this;\n\t\n\t  this._tickCount++;\n\t  if (!this._delaying) {\n\t    this._delaying = true;\n\t    if (this.options.useNative) {\n\t      nativeRAF(this.boundDelayCallback);\n\t    } else {\n\t      setTimeout(function() {\n\t        self.boundDelayCallback();\n\t      }, 0);\n\t    }\n\t  }\n\t\n\t  this._currentKeymaps[this._tickCount] = {\n\t    id: this._tickCount,\n\t    callback: callback,\n\t    cancelled: false\n\t  };\n\t  ++this.keymapsSize;\n\t\n\t  return this._tickCount;\n\t};\n\t\n\t/**\n\t * 取消动画帧\n\t *\n\t * @param id\n\t * @returns\n\t */\n\tAnimationFrame.prototype.cancelAnimationFrame = function(id) {\n\t  if (!this._isCustomFrameRate) {\n\t    nativeCAF(id);\n\t  }\n\t  //this._currentKeymaps[id].cancelled = true;\n\t  delete this._currentKeymaps[id];\n\t  --this.keymapsSize;\n\t};\n\t\n\tmodule.exports = AnimationFrame;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar raf;\n\tvar caf;\n\t\n\t(function(win) {\n\t  raf = win.requestAnimationFrame;\n\t  caf = win.cancelAnimationFrame;\n\t\n\t  var vendors = ['webkit', 'moz', 'o', 'ms'];\n\t  var vendor;\n\t  var i;\n\t  \n\t  if (!raf) {\n\t    for(i = 0; i < vendors.length; i++) {\n\t      vendor = win[vendors[i] + 'RequestAnimationFrame'];\n\t      if (vendor) {\n\t        raf = vendor;\n\t        caf = win[vendors[i] + 'CancelAnimationFrame'];\n\t        break;\n\t      }\n\t    }\n\t  }\n\t})(window);\n\t\n\tmodule.exports.raf = raf;\n\tmodule.exports.caf = caf;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar start = dateNow();\n\t\n\t/**\n\t * 返回1970.1.1至调用此函数的毫秒\n\t *\n\t * @returns {Number} 返回time in ms\n\t */\n\tfunction dateNow() {\n\t  return Date.now() || new Date().getTime();\n\t};\n\t\n\t/**\n\t * now默认会使用performance API \n\t * 这里时间是总的时间\n\t * requestAnimation回调的时间是window.performance.now()\n\t *\n\t * @returns {Number} 返回time in ms\n\t */\n\tfunction nowFromStart() {\n\t  if (window.performance) {\n\t    // window.performance.now() 从页面打开(window.performance.timing.navigationStart)到执行到这里(dateNow)的时间\n\t    // return window.performance.timing.navigationStart + window.performance.now();\n\t    return window.performance.now()\n\t  }\n\t  \n\t  return dateNow() - start;\n\t};\n\t\n\tmodule.exports = nowFromStart;\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** raf.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1195a08f9126fc04428b\n **/","// TODO:\n// error handle\n'use strict';\n\n// 如果用户不使用false, useNative根据支不支持raf情况自动判断\nvar nativeAF = require('./lib/nativeaf');\nvar nowFromStart = require('./lib/now');\nvar nativeRAF = nativeAF && nativeAF.raf;\nvar nativeCAF = nativeAF && nativeAF.caf;\n\n// 默认帧速率 60fps\nAnimationFrame.DEFAULT_FRAMERATE = 60;\n\n/**\n * \n * @params {Number || Object}  eg: { frameRate: 30 }\n * @constructor\n */\nfunction AnimationFrame(options) {\n  if (!(this instanceof AnimationFrame)) {\n    return new AnimationFrame(options);\n  }\n\n  // 用户自定义的帧速率\n  if (typeof options == 'number') {\n    options = {\n      frameRate: options\n    };\n  }\n  options || (options = {});\n  options.useNative !== false && (options.useNative = true);\n\n  this.options = options;\n  // 帧速率\n  this.frameRate = options.frameRate || AnimationFrame.DEFAULT_FRAMERATE;\n\n  // 每帧时长\n  this.frameLength = 1000 / this.frameRate;\n\n  this._isCustomFrameRate = this.frameRate !== AnimationFrame.DEFAULT_FRAMERATE;\n  \n  this._lastTickTime = 0;\n  this._tickCount = 0;\n  \n  this._currentKeymaps = {};\n  this.keymapsSize = 0;\n  \n  this._delaying = false;\n  \n  this.boundDelayCallback = delayCallback.bind(this);\n}\n\nfunction delayCallback(time) {\n  var lastTickTime = this._lastTickTime;\n  var delay;\n  time = time || 0;\n\n  // 保证第一次走到这里\n  if (lastTickTime === 0) {\n    this._lastTickTime = lastTickTime = time;\n  }\n\n  delay = this.frameLength - (time - lastTickTime);\n  if (delay <= 0) {\n    // should be (time + delay), 但实际上会这个值大\n    // 比如10帧，应该是100ms调用，但是可能112ms调用，那么下次delay 88ms就希望调用\n    this._lastTickTime = time + delay;\n    delay = 0;\n  }\n  \n  if (!this.options.useNative) {\n    requestTimeout.call(this, delay);\n    return;\n  }\n\n  if (delay === 0) {\n    doCallback.call(this);\n  } else {\n    // if (this.keymapsSize !== 0) {\n      nativeRAF(this.boundDelayCallback);\n    // }\n  }\n}\n\n// use timeout\nfunction requestTimeout(delay) {\n  var self = this;\n  setTimeout(function() {\n    doCallback.call(self);\n  }, delay);\n};\n\nfunction doCallback() {\n  var currentKeymaps;\n  var timeFromStart;\n  var id;\n  var item;\n\n  this._delaying = false;\n  currentKeymaps = this._currentKeymaps;\n  this._currentKeymaps = {};\n  this.keymapsSize = 0;\n  // this._lastTickTime = 0; 注意这里不能重置\n\n  timeFromStart = nowFromStart();\n  for (id in currentKeymaps) {\n    item = currentKeymaps[id];\n    if (!item.cancelled) {\n      item.callback(timeFromStart);\n    }\n  }\n}\n\n/**\n * 请求动画帧\n * 所谓自定义帧速率一定要比60小\n * 使用递归raf来判断是否到时调用回调,或者一个setTimeout搞定(不支持或不适用native的时候)\n *\n * @param callback\n * @returns {Number} 返回timer id\n */\nAnimationFrame.prototype.requestAnimationFrame = function(callback) {\n  if (!this._isCustomFrameRate) {\n    return nativeRAF(callback);\n  }\n\n  if (typeof callback !== 'function') throw new TypeError('arguments should be a callback function');\n\n  var self = this;\n\n  this._tickCount++;\n  if (!this._delaying) {\n    this._delaying = true;\n    if (this.options.useNative) {\n      nativeRAF(this.boundDelayCallback);\n    } else {\n      setTimeout(function() {\n        self.boundDelayCallback();\n      }, 0);\n    }\n  }\n\n  this._currentKeymaps[this._tickCount] = {\n    id: this._tickCount,\n    callback: callback,\n    cancelled: false\n  };\n  ++this.keymapsSize;\n\n  return this._tickCount;\n};\n\n/**\n * 取消动画帧\n *\n * @param id\n * @returns\n */\nAnimationFrame.prototype.cancelAnimationFrame = function(id) {\n  if (!this._isCustomFrameRate) {\n    nativeCAF(id);\n  }\n  //this._currentKeymaps[id].cancelled = true;\n  delete this._currentKeymaps[id];\n  --this.keymapsSize;\n};\n\nmodule.exports = AnimationFrame;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/index.js\n ** module id = 0\n ** module chunks = 0\n **/","'use strict';\n\nvar raf;\nvar caf;\n\n(function(win) {\n  raf = win.requestAnimationFrame;\n  caf = win.cancelAnimationFrame;\n\n  var vendors = ['webkit', 'moz', 'o', 'ms'];\n  var vendor;\n  var i;\n  \n  if (!raf) {\n    for(i = 0; i < vendors.length; i++) {\n      vendor = win[vendors[i] + 'RequestAnimationFrame'];\n      if (vendor) {\n        raf = vendor;\n        caf = win[vendors[i] + 'CancelAnimationFrame'];\n        break;\n      }\n    }\n  }\n})(window);\n\nmodule.exports.raf = raf;\nmodule.exports.caf = caf;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/nativeaf.js\n ** module id = 1\n ** module chunks = 0\n **/","'use strict';\n\nvar start = dateNow();\n\n/**\n * 返回1970.1.1至调用此函数的毫秒\n *\n * @returns {Number} 返回time in ms\n */\nfunction dateNow() {\n  return Date.now() || new Date().getTime();\n};\n\n/**\n * now默认会使用performance API \n * 这里时间是总的时间\n * requestAnimation回调的时间是window.performance.now()\n *\n * @returns {Number} 返回time in ms\n */\nfunction nowFromStart() {\n  if (window.performance) {\n    // window.performance.now() 从页面打开(window.performance.timing.navigationStart)到执行到这里(dateNow)的时间\n    // return window.performance.timing.navigationStart + window.performance.now();\n    return window.performance.now()\n  }\n  \n  return dateNow() - start;\n};\n\nmodule.exports = nowFromStart;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/now.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}